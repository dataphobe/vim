
command! ReSource :so ~/.config/nvim/init.vim


" Beging plugins.vim file
call plug#begin('~/.local/share/nvim/plugged')
" Plug 'whatyouhide/vim-gotham'
Plug 'romainl/Apprentice'
Plug 'vim-airline/vim-airline'
Plug 'chrisbra/csv.vim'
Plug 'vim-syntastic/syntastic'
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif

Plug 'lervag/vimtex'
Plug 'brennier/quicktex'
Plug 'terryma/vim-expand-region'
" indentations
" Plug 'nathanaelkane/vim-indent-guides'
Plug 'thaerkh/vim-indentguides'
Plug 'derekwyatt/vim-scala'
Plug 'scrooloose/nerdcommenter'
Plug 'terryma/vim-multiple-cursors'
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
Plug 'terryma/vim-expand-region'
call plug#end()

" End of plugins.vim

" Beging plugin_setting.vim file

" let g:python3_host_prog = '/usr/local/bin/python3'
" Use deoplete.
let g:deoplete#enable_at_startup = 1

let g:indentguides_spacechar = '>'
let g:indentguides_tabchar = '|'

colorscheme apprentice

let g:vimtex_compiler_latexmk = {
    \ 'backend' : 'nvim',
    \ 'background' : 1,
    \ 'build_dir' : './out/',
    \ 'callback' : 1,
    \ 'continuous' : 1,
    \ 'executable' : 'latexmk',
    \ 'options' : [
    \   '-pdf',
    \   '-verbose',
    \   '-file-line-error',
    \   '-synctex=1',
    \   '-interaction=nonstopmode',
    \ ],
\}

let g:quicktex_tex = {
    \' '   : "\<ESC>:call search('<+.*+>')\<CR>\"_c/+>/e\<CR>",
    \'m'   : '\( <+++> \) <++>',
    \'prf' : "\\begin{proof}\<CR><+++>\<CR>\\end{proof}",
    \'itms' : "\\begin{itemize}\<CR><+++>\<CR>\\end{itemize}",
    \'itm' : "\\item <+++>\<CR><++>",
\}

let g:quicktex_math = {
    \' '    : "\<ESC>:call search('<+.*+>')\<CR>\"_c/+>/e\<CR>",
    \'fr'   : '\mathcal{R} ',
    \'eq'   : '= ',
    \'set'  : '\{ <+++> \} <++>',
    \'frac' : '\frac{<+++>}{<++>} <++>',
    \'one'  : '1 ',
    \'st'   : ': ',
    \'in'   : '\in ',
    \'bn'   : '\mathbb{N} ',
\}


" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1

" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1


" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1

" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0

" Airline configs
let g:airline_powerline_fonts = 1
" End of plugin_setting.vim

